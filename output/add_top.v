// -----------------------------------------------------------------------------
// File      : add_top.v
// Brief     : Auto-generated by autowire.py v2.0
// Author    : czz
// Date      : 2025-08-24 22:14:19
// -----------------------------------------------------------------------------

module add_top(
    // u_DWC_pcie_dm ports
    input            app_clk_req_n,
    input            phy_clk_req_n,
    input            perst_n,
    output           pm_req_sticky_rst,
    output           pm_req_core_rst,
    output           pm_req_non_sticky_rst,
    output           pm_sel_aux_clk,
    output           pm_req_phy_rst,
    output  [4:0]    mstr_awid,
    output           mstr_awvalid,
    output  [31:0]   mstr_awaddr,
    output  [3:0]    mstr_awlen,
    output  [2:0]    mstr_awsize,
    output  [1:0]    mstr_awburst,
    output  [1:0]    mstr_awlock,
    output  [3:0]    mstr_awcache,
    output  [2:0]    mstr_awprot,
    output  [47:0]   mstr_awmisc_info,
    output           mstr_awmisc_info_last_dcmp_tlp,
    output  [63:0]   mstr_awmisc_info_hdr_34dw,
    output  [5:0]    mstr_awmisc_info_dma,
    output           mstr_awmisc_info_func_num,
    output           mstr_awmisc_info_ido,
    input            mstr_awready,
    output  [4:0]    mstr_wid,
    output           mstr_wvalid,
    output           mstr_wlast,
    output  [127:0]  mstr_wdata,
    output  [15:0]   mstr_wstrb,
    input            mstr_wready,
    input   [4:0]    mstr_bid,
    input            mstr_bvalid,
    input   [1:0]    mstr_bresp,
    input   [1:0]    mstr_bmisc_info_cpl_stat,
    output           mstr_bready,
    output  [4:0]    mstr_arid,
    output           mstr_arvalid,
    output  [31:0]   mstr_araddr,
    output  [3:0]    mstr_arlen,
    output  [2:0]    mstr_arsize,
    output  [1:0]    mstr_arburst,
    output  [1:0]    mstr_arlock,
    output  [3:0]    mstr_arcache,
    output  [2:0]    mstr_arprot,
    output  [47:0]   mstr_armisc_info,
    output           mstr_armisc_info_last_dcmp_tlp,
    output  [5:0]    mstr_armisc_info_dma,
    output           mstr_armisc_info_func_num,
    output           mstr_armisc_info_ido,
    input            mstr_arready,
    input   [4:0]    mstr_rid,
    input            mstr_rvalid,
    input            mstr_rlast,
    input   [127:0]  mstr_rdata,
    input   [1:0]    mstr_rresp,
    input   [12:0]   mstr_rmisc_info,
    input   [1:0]    mstr_rmisc_info_cpl_stat,
    output           mstr_rready,
    input            mstr_csysreq,
    output           mstr_csysack,
    output           mstr_cactive,
    input            mstr_aclk,
    input            mstr_aresetn,
    input            mstr_aclk_ug,
    output           mstr_aclk_active,
    input   [11:0]   slv_awid,
    input   [31:0]   slv_awaddr,
    input   [3:0]    slv_awlen,
    input   [2:0]    slv_awsize,
    input   [1:0]    slv_awburst,
    input   [1:0]    slv_awlock,
    input   [3:0]    slv_awcache,
    input   [2:0]    slv_awprot,
    input            slv_awvalid,
    input   [24:0]   slv_awmisc_info,
    input   [63:0]   slv_awmisc_info_hdr_34dw,
    input   [7:0]    slv_awmisc_info_p_tag,
    input            slv_awmisc_info_atu_bypass,
    input            slv_awmisc_info_func_num,
    input            slv_awmisc_info_ido,
    output           slv_awready,
    input   [11:0]   slv_wid,
    input   [127:0]  slv_wdata,
    input   [15:0]   slv_wstrb,
    input            slv_wlast,
    input            slv_wvalid,
    output           slv_wready,
    output  [11:0]   slv_bid,
    output  [1:0]    slv_bresp,
    output           slv_bvalid,
    output  [13:0]   slv_bmisc_info,
    input            slv_bready,
    input   [11:0]   slv_arid,
    input   [31:0]   slv_araddr,
    input   [3:0]    slv_arlen,
    input   [2:0]    slv_arsize,
    input   [1:0]    slv_arburst,
    input   [1:0]    slv_arlock,
    input   [3:0]    slv_arcache,
    input   [2:0]    slv_arprot,
    input            slv_arvalid,
    input   [24:0]   slv_armisc_info,
    input            slv_armisc_info_atu_bypass,
    input            slv_armisc_info_func_num,
    input            slv_armisc_info_ido,
    output           slv_arready,
    output  [11:0]   slv_rid,
    output  [127:0]  slv_rdata,
    output  [1:0]    slv_rresp,
    output           slv_rlast,
    output           slv_rvalid,
    output  [13:0]   slv_rmisc_info,
    output           slv_rmisc_info_ido,
    input            slv_rready,
    input            slv_csysreq,
    output           slv_csysack,
    output           slv_cactive,
    input            slv_aclk,
    input            slv_aresetn,
    input            slv_aclk_ug,
    output           slv_aclk_active,
    output  [4:0]    ib_rreq_ordr_ram_addra,
    output           ib_rreq_ordr_ram_wea,
    output  [160:0]  ib_rreq_ordr_ram_dina,
    output  [4:0]    ib_rreq_ordr_ram_addrb,
    output           ib_rreq_ordr_ram_enb,
    input   [160:0]  ib_rreq_ordr_ram_doutb,
    output  [3:0]    ib_rreq_c2a_cdc_ram_addra,
    output           ib_rreq_c2a_cdc_ram_wea,
    output  [182:0]  ib_rreq_c2a_cdc_ram_dina,
    output  [3:0]    ib_rreq_c2a_cdc_ram_addrb,
    output           ib_rreq_c2a_cdc_ram_enb,
    input   [182:0]  ib_rreq_c2a_cdc_ram_doutb,
    output  [3:0]    ib_wreq_c2a_cdc_ram_addra,
    output           ib_wreq_c2a_cdc_ram_wea,
    output  [310:0]  ib_wreq_c2a_cdc_ram_dina,
    output  [3:0]    ib_wreq_c2a_cdc_ram_addrb,
    output           ib_wreq_c2a_cdc_ram_enb,
    input   [310:0]  ib_wreq_c2a_cdc_ram_doutb,
    output  [9:0]    ib_mcpl_sb_ram_addra,
    output           ib_mcpl_sb_ram_wea,
    output  [132:0]  ib_mcpl_sb_ram_dina,
    output  [9:0]    ib_mcpl_sb_ram_addrb,
    output           ib_mcpl_sb_ram_enb,
    input   [132:0]  ib_mcpl_sb_ram_doutb,
    output  [3:0]    ib_mcpl_a2c_cdc_ram_addra,
    output           ib_mcpl_a2c_cdc_ram_wea,
    output           ib_mcpl_a2c_cdc_ram_enb,
    output  [190:0]  ib_mcpl_a2c_cdc_ram_dina,
    output  [3:0]    ib_mcpl_a2c_cdc_ram_addrb,
    input   [190:0]  ib_mcpl_a2c_cdc_ram_doutb,
    output  [4:0]    slv_npw_sab_ram_addra,
    output           slv_npw_sab_ram_wea,
    output  [99:0]   slv_npw_sab_ram_dina,
    output  [4:0]    slv_npw_sab_ram_addrb,
    output           slv_npw_sab_ram_enb,
    input   [99:0]   slv_npw_sab_ram_doutb,
    output  [3:0]    ob_npdcmp_ram_addra,
    output           ob_npdcmp_ram_wea,
    output  [125:0]  ob_npdcmp_ram_dina,
    output  [3:0]    ob_npdcmp_ram_addrb,
    output           ob_npdcmp_ram_enb,
    input   [125:0]  ob_npdcmp_ram_doutb,
    output  [3:0]    ob_pdcmp_hdr_ram_addra,
    output           ob_pdcmp_hdr_ram_wea,
    output  [86:0]   ob_pdcmp_hdr_ram_dina,
    output  [3:0]    ob_pdcmp_hdr_ram_addrb,
    output           ob_pdcmp_hdr_ram_enb,
    input   [86:0]   ob_pdcmp_hdr_ram_doutb,
    output  [5:0]    ob_pdcmp_data_ram_addra,
    output           ob_pdcmp_data_ram_wea,
    output  [127:0]  ob_pdcmp_data_ram_dina,
    output  [5:0]    ob_pdcmp_data_ram_addrb,
    output           ob_pdcmp_data_ram_enb,
    input   [127:0]  ob_pdcmp_data_ram_doutb,
    output  [8:0]    ob_ccmp_data_ram_addra,
    output           ob_ccmp_data_ram_wea,
    output  [132:0]  ob_ccmp_data_ram_dina,
    output  [8:0]    ob_ccmp_data_ram_addrb,
    output           ob_ccmp_data_ram_enb,
    input   [132:0]  ob_ccmp_data_ram_doutb,
    output  [3:0]    ob_cpl_c2a_cdc_ram_addra,
    output           ob_cpl_c2a_cdc_ram_wea,
    output           ob_cpl_c2a_cdc_ram_enb,
    output  [168:0]  ob_cpl_c2a_cdc_ram_dina,
    output  [3:0]    ob_cpl_c2a_cdc_ram_addrb,
    input   [168:0]  ob_cpl_c2a_cdc_ram_doutb,
    input   [3:0]    dbi_awid,
    input   [32:0]   dbi_awaddr,
    input   [3:0]    dbi_awlen,
    input   [2:0]    dbi_awsize,
    input   [1:0]    dbi_awburst,
    input   [1:0]    dbi_awlock,
    input   [3:0]    dbi_awcache,
    input   [2:0]    dbi_awprot,
    input            dbi_awvalid,
    output           dbi_awready,
    input   [3:0]    dbi_wid,
    input   [31:0]   dbi_wdata,
    input   [3:0]    dbi_wstrb,
    input            dbi_wlast,
    input            dbi_wvalid,
    output           dbi_wready,
    output  [3:0]    dbi_bid,
    output  [1:0]    dbi_bresp,
    output           dbi_bvalid,
    input            dbi_bready,
    input   [3:0]    dbi_arid,
    input   [32:0]   dbi_araddr,
    input   [3:0]    dbi_arlen,
    input   [2:0]    dbi_arsize,
    input   [1:0]    dbi_arburst,
    input   [1:0]    dbi_arlock,
    input   [3:0]    dbi_arcache,
    input   [2:0]    dbi_arprot,
    input            dbi_arvalid,
    output           dbi_arready,
    output  [3:0]    dbi_rid,
    output  [31:0]   dbi_rdata,
    output  [1:0]    dbi_rresp,
    output           dbi_rlast,
    output           dbi_rvalid,
    input            dbi_rready,
    input            dbi_csysreq,
    output           dbi_csysack,
    output           dbi_cactive,
    input            dbi_aclk,
    input            dbi_aresetn,
    input            dbi_aclk_ug,
    output           dbi_aclk_active,
    input   [1:0]    ext_lbc_ack,
    input   [63:0]   ext_lbc_din,
    output  [31:0]   lbc_ext_addr,
    output  [31:0]   lbc_ext_dout,
    output  [1:0]    lbc_ext_cs,
    output  [3:0]    lbc_ext_wr,
    output           lbc_ext_rom_access,
    output           lbc_ext_io_access,
    output  [2:0]    lbc_ext_bar_num,
    input            ven_msi_req,
    input            ven_msi_func_num,
    input   [2:0]    ven_msi_tc,
    input   [4:0]    ven_msi_vector,
    output           ven_msi_grant,
    output  [1:0]    cfg_msi_en,
    output  [1:0]    cfg_vpd_int,
    output  [1:0]    cfg_flr_pf_active,
    input   [1:0]    app_flr_pf_done,
    input   [31:0]   cfg_pwr_budget_data_reg,
    input            cfg_pwr_budget_func_num,
    output  [7:0]    cfg_pwr_budget_data_sel_reg,
    output  [1:0]    cfg_pwr_budget_sel,
    input   [1:0]    ven_msg_fmt,
    input   [4:0]    ven_msg_type,
    input   [2:0]    ven_msg_tc,
    input            ven_msg_td,
    input            ven_msg_ep,
    input   [2:0]    ven_msg_attr,
    input   [9:0]    ven_msg_len,
    input            ven_msg_func_num,
    input   [7:0]    ven_msg_tag,
    input   [7:0]    ven_msg_code,
    input   [63:0]   ven_msg_data,
    input            ven_msg_req,
    output           ven_msg_grant,
    input            rx_lane_flip_en,
    input            tx_lane_flip_en,
    input   [1:0]    sys_int,
    input   [1:0]    outband_pwrup_cmd,
    input            app_unlock_msg,
    input            apps_pm_xmt_turnoff,
    input   [1:0]    apps_pm_xmt_pme,
    input            sys_aux_pwr_det,
    input            app_ltssm_enable,
    input   [1:0]    sys_atten_button_pressed,
    input   [1:0]    sys_pre_det_state,
    input   [1:0]    sys_mrl_sensor_state,
    input   [1:0]    sys_pwr_fault_det,
    input   [1:0]    sys_mrl_sensor_chged,
    input   [1:0]    sys_pre_det_chged,
    input   [1:0]    sys_cmd_cpled_int,
    input   [1:0]    sys_eml_interlock_engaged,
    output  [3:0]    cfg_pwr_ind,
    output  [3:0]    cfg_atten_ind,
    output  [1:0]    cfg_pwr_ctrler_ctrl,
    output           radm_q_not_empty,
    output           radm_qoverflow,
    output           pm_xtlh_block_tlp,
    output  [127:0]  cfg_bar0_start,
    output  [63:0]   cfg_bar1_start,
    output  [127:0]  cfg_bar0_limit,
    output  [63:0]   cfg_bar1_limit,
    output  [127:0]  cfg_bar2_start,
    output  [127:0]  cfg_bar2_limit,
    output  [63:0]   cfg_bar3_start,
    output  [63:0]   cfg_bar3_limit,
    output  [127:0]  cfg_bar4_start,
    output  [127:0]  cfg_bar4_limit,
    output  [63:0]   cfg_bar5_start,
    output  [63:0]   cfg_bar5_limit,
    output  [63:0]   cfg_exp_rom_start,
    output  [63:0]   cfg_exp_rom_limit,
    output  [1:0]    cfg_bus_master_en,
    output  [1:0]    cfg_mem_space_en,
    output  [5:0]    cfg_max_rd_req_size,
    output  [5:0]    cfg_max_payload_size,
    output  [1:0]    cfg_rcb,
    output  [1:0]    cfg_pm_no_soft_rst,
    output           rdlh_link_up,
    output  [2:0]    pm_curnt_state,
    output  [1:0]    cfg_aer_rc_err_int,
    output  [1:0]    cfg_aer_rc_err_msi,
    output  [9:0]    cfg_aer_int_msg_num,
    output  [1:0]    cfg_sys_err_rc,
    output  [1:0]    cfg_pme_int,
    output  [1:0]    cfg_pme_msi,
    output  [9:0]    cfg_pcie_cap_int_msg_num,
    output  [5:0]    smlh_ltssm_state,
    output           smlh_link_up,
    output           smlh_req_rst_not,
    output           link_req_rst_not,
    output           brdg_slv_xfer_pending,
    output           brdg_dbi_xfer_pending,
    output           edma_xfer_pending,
    output           radm_xfer_pending,
    output  [63:0]   cxpl_debug_info,
    output  [15:0]   cxpl_debug_info_ei,
    output           radm_msg_unlock,
    output           radm_vendor_msg,
    output  [63:0]   radm_msg_payload,
    output           wake,
    output           clk_req_n,
    output  [15:0]   radm_msg_req_id,
    output           radm_inta_asserted,
    output           radm_intb_asserted,
    output           radm_intc_asserted,
    output           radm_intd_asserted,
    output           radm_inta_deasserted,
    output           radm_intb_deasserted,
    output           radm_intc_deasserted,
    output           radm_intd_deasserted,
    output           radm_correctable_err,
    output           radm_nonfatal_err,
    output           radm_fatal_err,
    output           radm_pm_pme,
    output           radm_pm_to_ack,
    output  [1:0]    rtlh_rfc_upd,
    output  [63:0]   rtlh_rfc_data,
    output  [1:0]    cfg_eml_control,
    output  [1:0]    hp_pme,
    output  [1:0]    hp_int,
    output  [1:0]    hp_msi,
    output           radm_pm_turnoff,
    output           trgt_cpl_timeout,
    output           trgt_timeout_cpl_func_num,
    output  [2:0]    trgt_timeout_cpl_tc,
    output  [1:0]    trgt_timeout_cpl_attr,
    output  [11:0]   trgt_timeout_cpl_len,
    output  [7:0]    trgt_timeout_lookup_id,
    output  [7:0]    trgt_lookup_id,
    output           trgt_lookup_empty,
    output           radm_cpl_timeout,
    output           radm_timeout_func_num,
    output  [2:0]    radm_timeout_cpl_tc,
    output  [1:0]    radm_timeout_cpl_attr,
    output  [11:0]   radm_timeout_cpl_len,
    output  [7:0]    radm_timeout_cpl_tag,
    output  [3:0]    mac_phy_powerdown,
    input   [3:0]    phy_mac_rxelecidle,
    input   [3:0]    phy_mac_phystatus,
    input            pipe_clk,
    input   [31:0]   phy_mac_rxdata,
    input   [3:0]    phy_mac_rxdatak,
    input   [3:0]    phy_mac_rxvalid,
    input   [11:0]   phy_mac_rxstatus,
    input   [3:0]    phy_mac_rxstandbystatus,
    input   [31:0]   phy_cfg_status,
    output           mac_phy_elasticbuffermode,
    output  [3:0]    mac_phy_txdatavalid,
    input   [3:0]    phy_mac_rxdatavalid,
    output  [31:0]   mac_phy_txdata,
    output  [3:0]    mac_phy_txdatak,
    output  [3:0]    mac_phy_txdetectrx_loopback,
    output  [3:0]    mac_phy_txelecidle,
    output  [3:0]    mac_phy_txcompliance,
    output  [3:0]    mac_phy_rxpolarity,
    output  [1:0]    mac_phy_width,
    output  [2:0]    mac_phy_pclk_rate,
    output  [3:0]    mac_phy_rxstandby,
    output           mac_phy_rate,
    output  [1:0]    mac_phy_txdeemph,
    output  [2:0]    mac_phy_txmargin,
    output           mac_phy_txswing,
    output           cfg_hw_auto_sp_dis,
    output  [31:0]   cfg_phy_control,
    input   [3:0]    device_type,
    input            core_clk,
    input            core_clk_ug,
    input            aux_clk,
    input            aux_clk_g,
    output           en_aux_clk_g,
    input            radm_clk_g,
    output           en_radm_clk_g,
    output           radm_idle,
    input            pwr_rst_n,
    input            sticky_rst_n,
    input            non_sticky_rst_n,
    input            core_rst_n,
    input            pipe_rst_n,
    input            app_init_rst,
    input            app_req_entr_l1,
    input            app_ready_entr_l23,
    input            app_req_exit_l1,
    input            app_req_retry_en,
    input            app_xfer_pending,
    output           training_rst_n,
    output  [7:0]    cfg_pbus_num,
    output  [4:0]    cfg_pbus_dev_num,
    output  [5:0]    pm_dstate,
    output  [1:0]    pm_status,
    output  [1:0]    pm_pme_en,
    output           pm_linkst_in_l0s,
    output           pm_linkst_in_l1,
    output           pm_linkst_in_l2,
    output           pm_linkst_l2_exit,
    output  [1:0]    aux_pm_en,
    output  [1:0]    edma_int,
    output  [15:0]   cfg_2ndbus_num,
    output  [15:0]   cfg_subbus_num,
    output           cfg_2nd_reset,
    output  [1:0]    cfg_no_snoop_en,
    output  [1:0]    cfg_relax_order_en,
    output           cfg_link_auto_bw_int,
    output           cfg_bw_mgt_int,
    output  [31:0]   msi_ctrl_io,
    output           msi_ctrl_int,
    output  [7:0]    msi_ctrl_int_vec,
    output  [7:0]    xdlh_retryram_addr,
    output  [134:0]  xdlh_retryram_data,
    output           xdlh_retryram_we,
    output           xdlh_retryram_en,
    output           xdlh_retryram_par_chk_val,
    input            retryram_xdlh_parerr_in,
    input   [134:0]  retryram_xdlh_data,
    output  [6:0]    xdlh_retrysotram_waddr,
    output  [6:0]    xdlh_retrysotram_raddr,
    output  [7:0]    xdlh_retrysotram_data,
    output           xdlh_retrysotram_we,
    output           xdlh_retrysotram_en,
    output           xdlh_retrysotram_par_chk_val,
    input   [7:0]    retrysotram_xdlh_data,
    input            retrysotram_xdlh_parerr_in,
    input   [133:0]  p_hdrq_dataout,
    input            p_hdrq_parerr_in,
    output           p_hdrq_par_chk_val,
    output  [6:0]    p_hdrq_addra,
    output  [6:0]    p_hdrq_addrb,
    output  [133:0]  p_hdrq_datain,
    output           p_hdrq_ena,
    output           p_hdrq_enb,
    output           p_hdrq_wea,
    input   [128:0]  p_dataq_dataout,
    input            p_dataq_parerr_in,
    output           p_dataq_par_chk_val,
    output  [6:0]    p_dataq_addra,
    output  [6:0]    p_dataq_addrb,
    output  [128:0]  p_dataq_datain,
    output           p_dataq_ena,
    output           p_dataq_enb,
    output           p_dataq_wea,
    input   [255:0]  ram2edma_din,
    output  [1:0]    edma2ram_addra,
    output  [1:0]    edma2ram_addrb,
    output  [255:0]  edma2ram_dout,
    output           edma2ram_re,
    output           edma2ram_we,
    input   [127:0]  ram2edmarbuff_din,
    output  [8:0]    edmarbuff2ram_addra,
    output  [8:0]    edmarbuff2ram_addrb,
    output  [127:0]  edmarbuff2ram_dout,
    output           edmarbuff2ram_re,
    output           edmarbuff2ram_we,
    input            aux_clk_active,
    input            app_clk_pm_en,
    input            clkreq_in_n,
    output           pm_linkst_in_l1sub,
    output           cfg_l1sub_en,
    output  [1:0]    mac_phy_pclkreq_n,
    output  [1:0]    cfg_ido_req_en,
    output  [1:0]    cfg_ido_cpl_en,
    output  [1:0]    cfg_send_cor_err,
    output  [1:0]    cfg_send_nf_err,
    output  [1:0]    cfg_send_f_err,
    output  [1:0]    cfg_int_disable,

    // u_DW_axi_x2x ports
    input            aclk_m,
    input            aresetn_m,
    input            awvalid_m,
    input   [31:0]   awaddr_m,
    input   [3:0]    awid_m,
    input   [3:0]    awlen_m,
    input   [2:0]    awsize_m,
    input   [1:0]    awburst_m,
    input   [1:0]    awlock_m,
    input   [3:0]    awcache_m,
    input   [2:0]    awprot_m,
    output           awready_m,
    input            wvalid_m,
    input   [3:0]    wid_m,
    input   [63:0]   wdata_m,
    input   [7:0]    wstrb_m,
    input            wlast_m,
    output           wready_m,
    output           bvalid_m,
    output  [3:0]    bid_m,
    output  [1:0]    bresp_m,
    input            bready_m,
    input            arvalid_m,
    input   [3:0]    arid_m,
    input   [31:0]   araddr_m,
    input   [3:0]    arlen_m,
    input   [2:0]    arsize_m,
    input   [1:0]    arburst_m,
    input   [1:0]    arlock_m,
    input   [3:0]    arcache_m,
    input   [2:0]    arprot_m,
    output           arready_m,
    output           rvalid_m,
    output  [3:0]    rid_m,
    output  [63:0]   rdata_m,
    output           rlast_m,
    output  [1:0]    rresp_m,
    input            rready_m,
    input            aclk_s,
    input            aresetn_s,
    output           awvalid_s1,
    output  [31:0]   awaddr_s1,
    output  [3:0]    awid_s1,
    output  [3:0]    awlen_s1,
    output  [2:0]    awsize_s1,
    output  [1:0]    awburst_s1,
    output  [1:0]    awlock_s1,
    output  [3:0]    awcache_s1,
    output  [2:0]    awprot_s1,
    input            awready_s1,
    output           wvalid_s1,
    output  [3:0]    wid_s1,
    output  [63:0]   wdata_s1,
    output  [7:0]    wstrb_s1,
    output           wlast_s1,
    input            wready_s1,
    input            bvalid_s1,
    input   [3:0]    bid_s1,
    input   [1:0]    bresp_s1,
    output           bready_s1,
    output           arvalid_s,
    output  [3:0]    arid_s,
    output  [31:0]   araddr_s,
    output  [3:0]    arlen_s,
    output  [2:0]    arsize_s,
    output  [1:0]    arburst_s,
    output  [1:0]    arlock_s,
    output  [3:0]    arcache_s,
    output  [2:0]    arprot_s,
    input            arready_s,
    input            rvalid_s,
    input   [3:0]    rid_s,
    input   [63:0]   rdata_s,
    input            rlast_s,
    input   [1:0]    rresp_s,
    output           rready_s
);

// Instance: u_DWC_pcie_dm (DWC_pcie_dm)
DWC_pcie_dm u_DWC_pcie_dm (
    .app_clk_req_n                  (app_clk_req_n                 ),    // input 
    .phy_clk_req_n                  (phy_clk_req_n                 ),    // input 
    .perst_n                        (perst_n                       ),    // input 
    .pm_req_sticky_rst              (pm_req_sticky_rst             ),    // output
    .pm_req_core_rst                (pm_req_core_rst               ),    // output
    .pm_req_non_sticky_rst          (pm_req_non_sticky_rst         ),    // output
    .pm_sel_aux_clk                 (pm_sel_aux_clk                ),    // output
    .pm_req_phy_rst                 (pm_req_phy_rst                ),    // output
    .mstr_awid                      (mstr_awid                     ),    // output [4:0]
    .mstr_awvalid                   (mstr_awvalid                  ),    // output
    .mstr_awaddr                    (mstr_awaddr                   ),    // output [31:0]
    .mstr_awlen                     (mstr_awlen                    ),    // output [3:0]
    .mstr_awsize                    (mstr_awsize                   ),    // output [2:0]
    .mstr_awburst                   (mstr_awburst                  ),    // output [1:0]
    .mstr_awlock                    (mstr_awlock                   ),    // output [1:0]
    .mstr_awcache                   (mstr_awcache                  ),    // output [3:0]
    .mstr_awprot                    (mstr_awprot                   ),    // output [2:0]
    .mstr_awmisc_info               (mstr_awmisc_info              ),    // output [47:0]
    .mstr_awmisc_info_last_dcmp_tlp (mstr_awmisc_info_last_dcmp_tlp),    // output
    .mstr_awmisc_info_hdr_34dw      (mstr_awmisc_info_hdr_34dw     ),    // output [63:0]
    .mstr_awmisc_info_dma           (mstr_awmisc_info_dma          ),    // output [5:0]
    .mstr_awmisc_info_func_num      (mstr_awmisc_info_func_num     ),    // output
    .mstr_awmisc_info_ido           (mstr_awmisc_info_ido          ),    // output
    .mstr_awready                   (mstr_awready                  ),    // input 
    .mstr_wid                       (mstr_wid                      ),    // output [4:0]
    .mstr_wvalid                    (mstr_wvalid                   ),    // output
    .mstr_wlast                     (mstr_wlast                    ),    // output
    .mstr_wdata                     (mstr_wdata                    ),    // output [127:0]
    .mstr_wstrb                     (mstr_wstrb                    ),    // output [15:0]
    .mstr_wready                    (mstr_wready                   ),    // input 
    .mstr_bid                       (mstr_bid                      ),    // input  [4:0]
    .mstr_bvalid                    (mstr_bvalid                   ),    // input 
    .mstr_bresp                     (mstr_bresp                    ),    // input  [1:0]
    .mstr_bmisc_info_cpl_stat       (mstr_bmisc_info_cpl_stat      ),    // input  [1:0]
    .mstr_bready                    (mstr_bready                   ),    // output
    .mstr_arid                      (mstr_arid                     ),    // output [4:0]
    .mstr_arvalid                   (mstr_arvalid                  ),    // output
    .mstr_araddr                    (mstr_araddr                   ),    // output [31:0]
    .mstr_arlen                     (mstr_arlen                    ),    // output [3:0]
    .mstr_arsize                    (mstr_arsize                   ),    // output [2:0]
    .mstr_arburst                   (mstr_arburst                  ),    // output [1:0]
    .mstr_arlock                    (mstr_arlock                   ),    // output [1:0]
    .mstr_arcache                   (mstr_arcache                  ),    // output [3:0]
    .mstr_arprot                    (mstr_arprot                   ),    // output [2:0]
    .mstr_armisc_info               (mstr_armisc_info              ),    // output [47:0]
    .mstr_armisc_info_last_dcmp_tlp (mstr_armisc_info_last_dcmp_tlp),    // output
    .mstr_armisc_info_dma           (mstr_armisc_info_dma          ),    // output [5:0]
    .mstr_armisc_info_func_num      (mstr_armisc_info_func_num     ),    // output
    .mstr_armisc_info_ido           (mstr_armisc_info_ido          ),    // output
    .mstr_arready                   (mstr_arready                  ),    // input 
    .mstr_rid                       (mstr_rid                      ),    // input  [4:0]
    .mstr_rvalid                    (mstr_rvalid                   ),    // input 
    .mstr_rlast                     (mstr_rlast                    ),    // input 
    .mstr_rdata                     (mstr_rdata                    ),    // input  [127:0]
    .mstr_rresp                     (mstr_rresp                    ),    // input  [1:0]
    .mstr_rmisc_info                (mstr_rmisc_info               ),    // input  [12:0]
    .mstr_rmisc_info_cpl_stat       (mstr_rmisc_info_cpl_stat      ),    // input  [1:0]
    .mstr_rready                    (mstr_rready                   ),    // output
    .mstr_csysreq                   (mstr_csysreq                  ),    // input 
    .mstr_csysack                   (mstr_csysack                  ),    // output
    .mstr_cactive                   (mstr_cactive                  ),    // output
    .mstr_aclk                      (mstr_aclk                     ),    // input 
    .mstr_aresetn                   (mstr_aresetn                  ),    // input 
    .mstr_aclk_ug                   (mstr_aclk_ug                  ),    // input 
    .mstr_aclk_active               (mstr_aclk_active              ),    // output
    .slv_awid                       (slv_awid                      ),    // input  [11:0]
    .slv_awaddr                     (slv_awaddr                    ),    // input  [31:0]
    .slv_awlen                      (slv_awlen                     ),    // input  [3:0]
    .slv_awsize                     (slv_awsize                    ),    // input  [2:0]
    .slv_awburst                    (slv_awburst                   ),    // input  [1:0]
    .slv_awlock                     (slv_awlock                    ),    // input  [1:0]
    .slv_awcache                    (slv_awcache                   ),    // input  [3:0]
    .slv_awprot                     (slv_awprot                    ),    // input  [2:0]
    .slv_awvalid                    (slv_awvalid                   ),    // input 
    .slv_awmisc_info                (slv_awmisc_info               ),    // input  [24:0]
    .slv_awmisc_info_hdr_34dw       (slv_awmisc_info_hdr_34dw      ),    // input  [63:0]
    .slv_awmisc_info_p_tag          (slv_awmisc_info_p_tag         ),    // input  [7:0]
    .slv_awmisc_info_atu_bypass     (slv_awmisc_info_atu_bypass    ),    // input 
    .slv_awmisc_info_func_num       (slv_awmisc_info_func_num      ),    // input 
    .slv_awmisc_info_ido            (slv_awmisc_info_ido           ),    // input 
    .slv_awready                    (slv_awready                   ),    // output
    .slv_wid                        (slv_wid                       ),    // input  [11:0]
    .slv_wdata                      (slv_wdata                     ),    // input  [127:0]
    .slv_wstrb                      (slv_wstrb                     ),    // input  [15:0]
    .slv_wlast                      (slv_wlast                     ),    // input 
    .slv_wvalid                     (slv_wvalid                    ),    // input 
    .slv_wready                     (slv_wready                    ),    // output
    .slv_bid                        (slv_bid                       ),    // output [11:0]
    .slv_bresp                      (slv_bresp                     ),    // output [1:0]
    .slv_bvalid                     (slv_bvalid                    ),    // output
    .slv_bmisc_info                 (slv_bmisc_info                ),    // output [13:0]
    .slv_bready                     (slv_bready                    ),    // input 
    .slv_arid                       (slv_arid                      ),    // input  [11:0]
    .slv_araddr                     (slv_araddr                    ),    // input  [31:0]
    .slv_arlen                      (slv_arlen                     ),    // input  [3:0]
    .slv_arsize                     (slv_arsize                    ),    // input  [2:0]
    .slv_arburst                    (slv_arburst                   ),    // input  [1:0]
    .slv_arlock                     (slv_arlock                    ),    // input  [1:0]
    .slv_arcache                    (slv_arcache                   ),    // input  [3:0]
    .slv_arprot                     (slv_arprot                    ),    // input  [2:0]
    .slv_arvalid                    (slv_arvalid                   ),    // input 
    .slv_armisc_info                (slv_armisc_info               ),    // input  [24:0]
    .slv_armisc_info_atu_bypass     (slv_armisc_info_atu_bypass    ),    // input 
    .slv_armisc_info_func_num       (slv_armisc_info_func_num      ),    // input 
    .slv_armisc_info_ido            (slv_armisc_info_ido           ),    // input 
    .slv_arready                    (slv_arready                   ),    // output
    .slv_rid                        (slv_rid                       ),    // output [11:0]
    .slv_rdata                      (slv_rdata                     ),    // output [127:0]
    .slv_rresp                      (slv_rresp                     ),    // output [1:0]
    .slv_rlast                      (slv_rlast                     ),    // output
    .slv_rvalid                     (slv_rvalid                    ),    // output
    .slv_rmisc_info                 (slv_rmisc_info                ),    // output [13:0]
    .slv_rmisc_info_ido             (slv_rmisc_info_ido            ),    // output
    .slv_rready                     (slv_rready                    ),    // input 
    .slv_csysreq                    (slv_csysreq                   ),    // input 
    .slv_csysack                    (slv_csysack                   ),    // output
    .slv_cactive                    (slv_cactive                   ),    // output
    .slv_aclk                       (slv_aclk                      ),    // input 
    .slv_aresetn                    (slv_aresetn                   ),    // input 
    .slv_aclk_ug                    (slv_aclk_ug                   ),    // input 
    .slv_aclk_active                (slv_aclk_active               ),    // output
    .ib_rreq_ordr_ram_addra         (ib_rreq_ordr_ram_addra        ),    // output [4:0]
    .ib_rreq_ordr_ram_wea           (ib_rreq_ordr_ram_wea          ),    // output
    .ib_rreq_ordr_ram_dina          (ib_rreq_ordr_ram_dina         ),    // output [160:0]
    .ib_rreq_ordr_ram_addrb         (ib_rreq_ordr_ram_addrb        ),    // output [4:0]
    .ib_rreq_ordr_ram_enb           (ib_rreq_ordr_ram_enb          ),    // output
    .ib_rreq_ordr_ram_doutb         (ib_rreq_ordr_ram_doutb        ),    // input  [160:0]
    .ib_rreq_c2a_cdc_ram_addra      (ib_rreq_c2a_cdc_ram_addra     ),    // output [3:0]
    .ib_rreq_c2a_cdc_ram_wea        (ib_rreq_c2a_cdc_ram_wea       ),    // output
    .ib_rreq_c2a_cdc_ram_dina       (ib_rreq_c2a_cdc_ram_dina      ),    // output [182:0]
    .ib_rreq_c2a_cdc_ram_addrb      (ib_rreq_c2a_cdc_ram_addrb     ),    // output [3:0]
    .ib_rreq_c2a_cdc_ram_enb        (ib_rreq_c2a_cdc_ram_enb       ),    // output
    .ib_rreq_c2a_cdc_ram_doutb      (ib_rreq_c2a_cdc_ram_doutb     ),    // input  [182:0]
    .ib_wreq_c2a_cdc_ram_addra      (ib_wreq_c2a_cdc_ram_addra     ),    // output [3:0]
    .ib_wreq_c2a_cdc_ram_wea        (ib_wreq_c2a_cdc_ram_wea       ),    // output
    .ib_wreq_c2a_cdc_ram_dina       (ib_wreq_c2a_cdc_ram_dina      ),    // output [310:0]
    .ib_wreq_c2a_cdc_ram_addrb      (ib_wreq_c2a_cdc_ram_addrb     ),    // output [3:0]
    .ib_wreq_c2a_cdc_ram_enb        (ib_wreq_c2a_cdc_ram_enb       ),    // output
    .ib_wreq_c2a_cdc_ram_doutb      (ib_wreq_c2a_cdc_ram_doutb     ),    // input  [310:0]
    .ib_mcpl_sb_ram_addra           (ib_mcpl_sb_ram_addra          ),    // output [9:0]
    .ib_mcpl_sb_ram_wea             (ib_mcpl_sb_ram_wea            ),    // output
    .ib_mcpl_sb_ram_dina            (ib_mcpl_sb_ram_dina           ),    // output [132:0]
    .ib_mcpl_sb_ram_addrb           (ib_mcpl_sb_ram_addrb          ),    // output [9:0]
    .ib_mcpl_sb_ram_enb             (ib_mcpl_sb_ram_enb            ),    // output
    .ib_mcpl_sb_ram_doutb           (ib_mcpl_sb_ram_doutb          ),    // input  [132:0]
    .ib_mcpl_a2c_cdc_ram_addra      (ib_mcpl_a2c_cdc_ram_addra     ),    // output [3:0]
    .ib_mcpl_a2c_cdc_ram_wea        (ib_mcpl_a2c_cdc_ram_wea       ),    // output
    .ib_mcpl_a2c_cdc_ram_enb        (ib_mcpl_a2c_cdc_ram_enb       ),    // output
    .ib_mcpl_a2c_cdc_ram_dina       (ib_mcpl_a2c_cdc_ram_dina      ),    // output [190:0]
    .ib_mcpl_a2c_cdc_ram_addrb      (ib_mcpl_a2c_cdc_ram_addrb     ),    // output [3:0]
    .ib_mcpl_a2c_cdc_ram_doutb      (ib_mcpl_a2c_cdc_ram_doutb     ),    // input  [190:0]
    .slv_npw_sab_ram_addra          (slv_npw_sab_ram_addra         ),    // output [4:0]
    .slv_npw_sab_ram_wea            (slv_npw_sab_ram_wea           ),    // output
    .slv_npw_sab_ram_dina           (slv_npw_sab_ram_dina          ),    // output [99:0]
    .slv_npw_sab_ram_addrb          (slv_npw_sab_ram_addrb         ),    // output [4:0]
    .slv_npw_sab_ram_enb            (slv_npw_sab_ram_enb           ),    // output
    .slv_npw_sab_ram_doutb          (slv_npw_sab_ram_doutb         ),    // input  [99:0]
    .ob_npdcmp_ram_addra            (ob_npdcmp_ram_addra           ),    // output [3:0]
    .ob_npdcmp_ram_wea              (ob_npdcmp_ram_wea             ),    // output
    .ob_npdcmp_ram_dina             (ob_npdcmp_ram_dina            ),    // output [125:0]
    .ob_npdcmp_ram_addrb            (ob_npdcmp_ram_addrb           ),    // output [3:0]
    .ob_npdcmp_ram_enb              (ob_npdcmp_ram_enb             ),    // output
    .ob_npdcmp_ram_doutb            (ob_npdcmp_ram_doutb           ),    // input  [125:0]
    .ob_pdcmp_hdr_ram_addra         (ob_pdcmp_hdr_ram_addra        ),    // output [3:0]
    .ob_pdcmp_hdr_ram_wea           (ob_pdcmp_hdr_ram_wea          ),    // output
    .ob_pdcmp_hdr_ram_dina          (ob_pdcmp_hdr_ram_dina         ),    // output [86:0]
    .ob_pdcmp_hdr_ram_addrb         (ob_pdcmp_hdr_ram_addrb        ),    // output [3:0]
    .ob_pdcmp_hdr_ram_enb           (ob_pdcmp_hdr_ram_enb          ),    // output
    .ob_pdcmp_hdr_ram_doutb         (ob_pdcmp_hdr_ram_doutb        ),    // input  [86:0]
    .ob_pdcmp_data_ram_addra        (ob_pdcmp_data_ram_addra       ),    // output [5:0]
    .ob_pdcmp_data_ram_wea          (ob_pdcmp_data_ram_wea         ),    // output
    .ob_pdcmp_data_ram_dina         (ob_pdcmp_data_ram_dina        ),    // output [127:0]
    .ob_pdcmp_data_ram_addrb        (ob_pdcmp_data_ram_addrb       ),    // output [5:0]
    .ob_pdcmp_data_ram_enb          (ob_pdcmp_data_ram_enb         ),    // output
    .ob_pdcmp_data_ram_doutb        (ob_pdcmp_data_ram_doutb       ),    // input  [127:0]
    .ob_ccmp_data_ram_addra         (ob_ccmp_data_ram_addra        ),    // output [8:0]
    .ob_ccmp_data_ram_wea           (ob_ccmp_data_ram_wea          ),    // output
    .ob_ccmp_data_ram_dina          (ob_ccmp_data_ram_dina         ),    // output [132:0]
    .ob_ccmp_data_ram_addrb         (ob_ccmp_data_ram_addrb        ),    // output [8:0]
    .ob_ccmp_data_ram_enb           (ob_ccmp_data_ram_enb          ),    // output
    .ob_ccmp_data_ram_doutb         (ob_ccmp_data_ram_doutb        ),    // input  [132:0]
    .ob_cpl_c2a_cdc_ram_addra       (ob_cpl_c2a_cdc_ram_addra      ),    // output [3:0]
    .ob_cpl_c2a_cdc_ram_wea         (ob_cpl_c2a_cdc_ram_wea        ),    // output
    .ob_cpl_c2a_cdc_ram_enb         (ob_cpl_c2a_cdc_ram_enb        ),    // output
    .ob_cpl_c2a_cdc_ram_dina        (ob_cpl_c2a_cdc_ram_dina       ),    // output [168:0]
    .ob_cpl_c2a_cdc_ram_addrb       (ob_cpl_c2a_cdc_ram_addrb      ),    // output [3:0]
    .ob_cpl_c2a_cdc_ram_doutb       (ob_cpl_c2a_cdc_ram_doutb      ),    // input  [168:0]
    .dbi_awid                       (dbi_awid                      ),    // input  [3:0]
    .dbi_awaddr                     (dbi_awaddr                    ),    // input  [32:0]
    .dbi_awlen                      (dbi_awlen                     ),    // input  [3:0]
    .dbi_awsize                     (dbi_awsize                    ),    // input  [2:0]
    .dbi_awburst                    (dbi_awburst                   ),    // input  [1:0]
    .dbi_awlock                     (dbi_awlock                    ),    // input  [1:0]
    .dbi_awcache                    (dbi_awcache                   ),    // input  [3:0]
    .dbi_awprot                     (dbi_awprot                    ),    // input  [2:0]
    .dbi_awvalid                    (dbi_awvalid                   ),    // input 
    .dbi_awready                    (dbi_awready                   ),    // output
    .dbi_wid                        (dbi_wid                       ),    // input  [3:0]
    .dbi_wdata                      (dbi_wdata                     ),    // input  [31:0]
    .dbi_wstrb                      (dbi_wstrb                     ),    // input  [3:0]
    .dbi_wlast                      (dbi_wlast                     ),    // input 
    .dbi_wvalid                     (dbi_wvalid                    ),    // input 
    .dbi_wready                     (dbi_wready                    ),    // output
    .dbi_bid                        (dbi_bid                       ),    // output [3:0]
    .dbi_bresp                      (dbi_bresp                     ),    // output [1:0]
    .dbi_bvalid                     (dbi_bvalid                    ),    // output
    .dbi_bready                     (dbi_bready                    ),    // input 
    .dbi_arid                       (dbi_arid                      ),    // input  [3:0]
    .dbi_araddr                     (dbi_araddr                    ),    // input  [32:0]
    .dbi_arlen                      (dbi_arlen                     ),    // input  [3:0]
    .dbi_arsize                     (dbi_arsize                    ),    // input  [2:0]
    .dbi_arburst                    (dbi_arburst                   ),    // input  [1:0]
    .dbi_arlock                     (dbi_arlock                    ),    // input  [1:0]
    .dbi_arcache                    (dbi_arcache                   ),    // input  [3:0]
    .dbi_arprot                     (dbi_arprot                    ),    // input  [2:0]
    .dbi_arvalid                    (dbi_arvalid                   ),    // input 
    .dbi_arready                    (dbi_arready                   ),    // output
    .dbi_rid                        (dbi_rid                       ),    // output [3:0]
    .dbi_rdata                      (dbi_rdata                     ),    // output [31:0]
    .dbi_rresp                      (dbi_rresp                     ),    // output [1:0]
    .dbi_rlast                      (dbi_rlast                     ),    // output
    .dbi_rvalid                     (dbi_rvalid                    ),    // output
    .dbi_rready                     (dbi_rready                    ),    // input 
    .dbi_csysreq                    (dbi_csysreq                   ),    // input 
    .dbi_csysack                    (dbi_csysack                   ),    // output
    .dbi_cactive                    (dbi_cactive                   ),    // output
    .dbi_aclk                       (dbi_aclk                      ),    // input 
    .dbi_aresetn                    (dbi_aresetn                   ),    // input 
    .dbi_aclk_ug                    (dbi_aclk_ug                   ),    // input 
    .dbi_aclk_active                (dbi_aclk_active               ),    // output
    .ext_lbc_ack                    (ext_lbc_ack                   ),    // input  [1:0]
    .ext_lbc_din                    (ext_lbc_din                   ),    // input  [63:0]
    .lbc_ext_addr                   (lbc_ext_addr                  ),    // output [31:0]
    .lbc_ext_dout                   (lbc_ext_dout                  ),    // output [31:0]
    .lbc_ext_cs                     (lbc_ext_cs                    ),    // output [1:0]
    .lbc_ext_wr                     (lbc_ext_wr                    ),    // output [3:0]
    .lbc_ext_rom_access             (lbc_ext_rom_access            ),    // output
    .lbc_ext_io_access              (lbc_ext_io_access             ),    // output
    .lbc_ext_bar_num                (lbc_ext_bar_num               ),    // output [2:0]
    .ven_msi_req                    (ven_msi_req                   ),    // input 
    .ven_msi_func_num               (ven_msi_func_num              ),    // input 
    .ven_msi_tc                     (ven_msi_tc                    ),    // input  [2:0]
    .ven_msi_vector                 (ven_msi_vector                ),    // input  [4:0]
    .ven_msi_grant                  (ven_msi_grant                 ),    // output
    .cfg_msi_en                     (cfg_msi_en                    ),    // output [1:0]
    .cfg_vpd_int                    (cfg_vpd_int                   ),    // output [1:0]
    .cfg_flr_pf_active              (cfg_flr_pf_active             ),    // output [1:0]
    .app_flr_pf_done                (app_flr_pf_done               ),    // input  [1:0]
    .cfg_pwr_budget_data_reg        (cfg_pwr_budget_data_reg       ),    // input  [31:0]
    .cfg_pwr_budget_func_num        (cfg_pwr_budget_func_num       ),    // input 
    .cfg_pwr_budget_data_sel_reg    (cfg_pwr_budget_data_sel_reg   ),    // output [7:0]
    .cfg_pwr_budget_sel             (cfg_pwr_budget_sel            ),    // output [1:0]
    .ven_msg_fmt                    (ven_msg_fmt                   ),    // input  [1:0]
    .ven_msg_type                   (ven_msg_type                  ),    // input  [4:0]
    .ven_msg_tc                     (ven_msg_tc                    ),    // input  [2:0]
    .ven_msg_td                     (ven_msg_td                    ),    // input 
    .ven_msg_ep                     (ven_msg_ep                    ),    // input 
    .ven_msg_attr                   (ven_msg_attr                  ),    // input  [2:0]
    .ven_msg_len                    (ven_msg_len                   ),    // input  [9:0]
    .ven_msg_func_num               (ven_msg_func_num              ),    // input 
    .ven_msg_tag                    (ven_msg_tag                   ),    // input  [7:0]
    .ven_msg_code                   (ven_msg_code                  ),    // input  [7:0]
    .ven_msg_data                   (ven_msg_data                  ),    // input  [63:0]
    .ven_msg_req                    (ven_msg_req                   ),    // input 
    .ven_msg_grant                  (ven_msg_grant                 ),    // output
    .rx_lane_flip_en                (rx_lane_flip_en               ),    // input 
    .tx_lane_flip_en                (tx_lane_flip_en               ),    // input 
    .sys_int                        (sys_int                       ),    // input  [1:0]
    .outband_pwrup_cmd              (outband_pwrup_cmd             ),    // input  [1:0]
    .app_unlock_msg                 (app_unlock_msg                ),    // input 
    .apps_pm_xmt_turnoff            (apps_pm_xmt_turnoff           ),    // input 
    .apps_pm_xmt_pme                (apps_pm_xmt_pme               ),    // input  [1:0]
    .sys_aux_pwr_det                (sys_aux_pwr_det               ),    // input 
    .app_ltssm_enable               (app_ltssm_enable              ),    // input 
    .sys_atten_button_pressed       (sys_atten_button_pressed      ),    // input  [1:0]
    .sys_pre_det_state              (sys_pre_det_state             ),    // input  [1:0]
    .sys_mrl_sensor_state           (sys_mrl_sensor_state          ),    // input  [1:0]
    .sys_pwr_fault_det              (sys_pwr_fault_det             ),    // input  [1:0]
    .sys_mrl_sensor_chged           (sys_mrl_sensor_chged          ),    // input  [1:0]
    .sys_pre_det_chged              (sys_pre_det_chged             ),    // input  [1:0]
    .sys_cmd_cpled_int              (sys_cmd_cpled_int             ),    // input  [1:0]
    .sys_eml_interlock_engaged      (sys_eml_interlock_engaged     ),    // input  [1:0]
    .cfg_pwr_ind                    (cfg_pwr_ind                   ),    // output [3:0]
    .cfg_atten_ind                  (cfg_atten_ind                 ),    // output [3:0]
    .cfg_pwr_ctrler_ctrl            (cfg_pwr_ctrler_ctrl           ),    // output [1:0]
    .radm_q_not_empty               (radm_q_not_empty              ),    // output
    .radm_qoverflow                 (radm_qoverflow                ),    // output
    .pm_xtlh_block_tlp              (pm_xtlh_block_tlp             ),    // output
    .cfg_bar0_start                 (cfg_bar0_start                ),    // output [127:0]
    .cfg_bar1_start                 (cfg_bar1_start                ),    // output [63:0]
    .cfg_bar0_limit                 (cfg_bar0_limit                ),    // output [127:0]
    .cfg_bar1_limit                 (cfg_bar1_limit                ),    // output [63:0]
    .cfg_bar2_start                 (cfg_bar2_start                ),    // output [127:0]
    .cfg_bar2_limit                 (cfg_bar2_limit                ),    // output [127:0]
    .cfg_bar3_start                 (cfg_bar3_start                ),    // output [63:0]
    .cfg_bar3_limit                 (cfg_bar3_limit                ),    // output [63:0]
    .cfg_bar4_start                 (cfg_bar4_start                ),    // output [127:0]
    .cfg_bar4_limit                 (cfg_bar4_limit                ),    // output [127:0]
    .cfg_bar5_start                 (cfg_bar5_start                ),    // output [63:0]
    .cfg_bar5_limit                 (cfg_bar5_limit                ),    // output [63:0]
    .cfg_exp_rom_start              (cfg_exp_rom_start             ),    // output [63:0]
    .cfg_exp_rom_limit              (cfg_exp_rom_limit             ),    // output [63:0]
    .cfg_bus_master_en              (cfg_bus_master_en             ),    // output [1:0]
    .cfg_mem_space_en               (cfg_mem_space_en              ),    // output [1:0]
    .cfg_max_rd_req_size            (cfg_max_rd_req_size           ),    // output [5:0]
    .cfg_max_payload_size           (cfg_max_payload_size          ),    // output [5:0]
    .cfg_rcb                        (cfg_rcb                       ),    // output [1:0]
    .cfg_pm_no_soft_rst             (cfg_pm_no_soft_rst            ),    // output [1:0]
    .rdlh_link_up                   (rdlh_link_up                  ),    // output
    .pm_curnt_state                 (pm_curnt_state                ),    // output [2:0]
    .cfg_aer_rc_err_int             (cfg_aer_rc_err_int            ),    // output [1:0]
    .cfg_aer_rc_err_msi             (cfg_aer_rc_err_msi            ),    // output [1:0]
    .cfg_aer_int_msg_num            (cfg_aer_int_msg_num           ),    // output [9:0]
    .cfg_sys_err_rc                 (cfg_sys_err_rc                ),    // output [1:0]
    .cfg_pme_int                    (cfg_pme_int                   ),    // output [1:0]
    .cfg_pme_msi                    (cfg_pme_msi                   ),    // output [1:0]
    .cfg_pcie_cap_int_msg_num       (cfg_pcie_cap_int_msg_num      ),    // output [9:0]
    .smlh_ltssm_state               (smlh_ltssm_state              ),    // output [5:0]
    .smlh_link_up                   (smlh_link_up                  ),    // output
    .smlh_req_rst_not               (smlh_req_rst_not              ),    // output
    .link_req_rst_not               (link_req_rst_not              ),    // output
    .brdg_slv_xfer_pending          (brdg_slv_xfer_pending         ),    // output
    .brdg_dbi_xfer_pending          (brdg_dbi_xfer_pending         ),    // output
    .edma_xfer_pending              (edma_xfer_pending             ),    // output
    .radm_xfer_pending              (radm_xfer_pending             ),    // output
    .cxpl_debug_info                (cxpl_debug_info               ),    // output [63:0]
    .cxpl_debug_info_ei             (cxpl_debug_info_ei            ),    // output [15:0]
    .radm_msg_unlock                (radm_msg_unlock               ),    // output
    .radm_vendor_msg                (radm_vendor_msg               ),    // output
    .radm_msg_payload               (radm_msg_payload              ),    // output [63:0]
    .wake                           (wake                          ),    // output
    .clk_req_n                      (clk_req_n                     ),    // output
    .radm_msg_req_id                (radm_msg_req_id               ),    // output [15:0]
    .radm_inta_asserted             (radm_inta_asserted            ),    // output
    .radm_intb_asserted             (radm_intb_asserted            ),    // output
    .radm_intc_asserted             (radm_intc_asserted            ),    // output
    .radm_intd_asserted             (radm_intd_asserted            ),    // output
    .radm_inta_deasserted           (radm_inta_deasserted          ),    // output
    .radm_intb_deasserted           (radm_intb_deasserted          ),    // output
    .radm_intc_deasserted           (radm_intc_deasserted          ),    // output
    .radm_intd_deasserted           (radm_intd_deasserted          ),    // output
    .radm_correctable_err           (radm_correctable_err          ),    // output
    .radm_nonfatal_err              (radm_nonfatal_err             ),    // output
    .radm_fatal_err                 (radm_fatal_err                ),    // output
    .radm_pm_pme                    (radm_pm_pme                   ),    // output
    .radm_pm_to_ack                 (radm_pm_to_ack                ),    // output
    .rtlh_rfc_upd                   (rtlh_rfc_upd                  ),    // output [1:0]
    .rtlh_rfc_data                  (rtlh_rfc_data                 ),    // output [63:0]
    .cfg_eml_control                (cfg_eml_control               ),    // output [1:0]
    .hp_pme                         (hp_pme                        ),    // output [1:0]
    .hp_int                         (hp_int                        ),    // output [1:0]
    .hp_msi                         (hp_msi                        ),    // output [1:0]
    .radm_pm_turnoff                (radm_pm_turnoff               ),    // output
    .trgt_cpl_timeout               (trgt_cpl_timeout              ),    // output
    .trgt_timeout_cpl_func_num      (trgt_timeout_cpl_func_num     ),    // output
    .trgt_timeout_cpl_tc            (trgt_timeout_cpl_tc           ),    // output [2:0]
    .trgt_timeout_cpl_attr          (trgt_timeout_cpl_attr         ),    // output [1:0]
    .trgt_timeout_cpl_len           (trgt_timeout_cpl_len          ),    // output [11:0]
    .trgt_timeout_lookup_id         (trgt_timeout_lookup_id        ),    // output [7:0]
    .trgt_lookup_id                 (trgt_lookup_id                ),    // output [7:0]
    .trgt_lookup_empty              (trgt_lookup_empty             ),    // output
    .radm_cpl_timeout               (radm_cpl_timeout              ),    // output
    .radm_timeout_func_num          (radm_timeout_func_num         ),    // output
    .radm_timeout_cpl_tc            (radm_timeout_cpl_tc           ),    // output [2:0]
    .radm_timeout_cpl_attr          (radm_timeout_cpl_attr         ),    // output [1:0]
    .radm_timeout_cpl_len           (radm_timeout_cpl_len          ),    // output [11:0]
    .radm_timeout_cpl_tag           (radm_timeout_cpl_tag          ),    // output [7:0]
    .mac_phy_powerdown              (mac_phy_powerdown             ),    // output [3:0]
    .phy_mac_rxelecidle             (phy_mac_rxelecidle            ),    // input  [3:0]
    .phy_mac_phystatus              (phy_mac_phystatus             ),    // input  [3:0]
    .pipe_clk                       (pipe_clk                      ),    // input 
    .phy_mac_rxdata                 (phy_mac_rxdata                ),    // input  [31:0]
    .phy_mac_rxdatak                (phy_mac_rxdatak               ),    // input  [3:0]
    .phy_mac_rxvalid                (phy_mac_rxvalid               ),    // input  [3:0]
    .phy_mac_rxstatus               (phy_mac_rxstatus              ),    // input  [11:0]
    .phy_mac_rxstandbystatus        (phy_mac_rxstandbystatus       ),    // input  [3:0]
    .phy_cfg_status                 (phy_cfg_status                ),    // input  [31:0]
    .mac_phy_elasticbuffermode      (mac_phy_elasticbuffermode     ),    // output
    .mac_phy_txdatavalid            (mac_phy_txdatavalid           ),    // output [3:0]
    .phy_mac_rxdatavalid            (phy_mac_rxdatavalid           ),    // input  [3:0]
    .mac_phy_txdata                 (mac_phy_txdata                ),    // output [31:0]
    .mac_phy_txdatak                (mac_phy_txdatak               ),    // output [3:0]
    .mac_phy_txdetectrx_loopback    (mac_phy_txdetectrx_loopback   ),    // output [3:0]
    .mac_phy_txelecidle             (mac_phy_txelecidle            ),    // output [3:0]
    .mac_phy_txcompliance           (mac_phy_txcompliance          ),    // output [3:0]
    .mac_phy_rxpolarity             (mac_phy_rxpolarity            ),    // output [3:0]
    .mac_phy_width                  (mac_phy_width                 ),    // output [1:0]
    .mac_phy_pclk_rate              (mac_phy_pclk_rate             ),    // output [2:0]
    .mac_phy_rxstandby              (mac_phy_rxstandby             ),    // output [3:0]
    .mac_phy_rate                   (mac_phy_rate                  ),    // output
    .mac_phy_txdeemph               (mac_phy_txdeemph              ),    // output [1:0]
    .mac_phy_txmargin               (mac_phy_txmargin              ),    // output [2:0]
    .mac_phy_txswing                (mac_phy_txswing               ),    // output
    .cfg_hw_auto_sp_dis             (cfg_hw_auto_sp_dis            ),    // output
    .cfg_phy_control                (cfg_phy_control               ),    // output [31:0]
    .device_type                    (device_type                   ),    // input  [3:0]
    .core_clk                       (core_clk                      ),    // input 
    .core_clk_ug                    (core_clk_ug                   ),    // input 
    .aux_clk                        (aux_clk                       ),    // input 
    .aux_clk_g                      (aux_clk_g                     ),    // input 
    .en_aux_clk_g                   (en_aux_clk_g                  ),    // output
    .radm_clk_g                     (radm_clk_g                    ),    // input 
    .en_radm_clk_g                  (en_radm_clk_g                 ),    // output
    .radm_idle                      (radm_idle                     ),    // output
    .pwr_rst_n                      (pwr_rst_n                     ),    // input 
    .sticky_rst_n                   (sticky_rst_n                  ),    // input 
    .non_sticky_rst_n               (non_sticky_rst_n              ),    // input 
    .core_rst_n                     (core_rst_n                    ),    // input 
    .pipe_rst_n                     (pipe_rst_n                    ),    // input 
    .app_init_rst                   (app_init_rst                  ),    // input 
    .app_req_entr_l1                (app_req_entr_l1               ),    // input 
    .app_ready_entr_l23             (app_ready_entr_l23            ),    // input 
    .app_req_exit_l1                (app_req_exit_l1               ),    // input 
    .app_req_retry_en               (app_req_retry_en              ),    // input 
    .app_xfer_pending               (app_xfer_pending              ),    // input 
    .training_rst_n                 (training_rst_n                ),    // output
    .cfg_pbus_num                   (cfg_pbus_num                  ),    // output [7:0]
    .cfg_pbus_dev_num               (cfg_pbus_dev_num              ),    // output [4:0]
    .pm_dstate                      (pm_dstate                     ),    // output [5:0]
    .pm_status                      (pm_status                     ),    // output [1:0]
    .pm_pme_en                      (pm_pme_en                     ),    // output [1:0]
    .pm_linkst_in_l0s               (pm_linkst_in_l0s              ),    // output
    .pm_linkst_in_l1                (pm_linkst_in_l1               ),    // output
    .pm_linkst_in_l2                (pm_linkst_in_l2               ),    // output
    .pm_linkst_l2_exit              (pm_linkst_l2_exit             ),    // output
    .aux_pm_en                      (aux_pm_en                     ),    // output [1:0]
    .edma_int                       (edma_int                      ),    // output [1:0]
    .cfg_2ndbus_num                 (cfg_2ndbus_num                ),    // output [15:0]
    .cfg_subbus_num                 (cfg_subbus_num                ),    // output [15:0]
    .cfg_2nd_reset                  (cfg_2nd_reset                 ),    // output
    .cfg_no_snoop_en                (cfg_no_snoop_en               ),    // output [1:0]
    .cfg_relax_order_en             (cfg_relax_order_en            ),    // output [1:0]
    .cfg_link_auto_bw_int           (cfg_link_auto_bw_int          ),    // output
    .cfg_bw_mgt_int                 (cfg_bw_mgt_int                ),    // output
    .msi_ctrl_io                    (msi_ctrl_io                   ),    // output [31:0]
    .msi_ctrl_int                   (msi_ctrl_int                  ),    // output
    .msi_ctrl_int_vec               (msi_ctrl_int_vec              ),    // output [7:0]
    .xdlh_retryram_addr             (xdlh_retryram_addr            ),    // output [7:0]
    .xdlh_retryram_data             (xdlh_retryram_data            ),    // output [134:0]
    .xdlh_retryram_we               (xdlh_retryram_we              ),    // output
    .xdlh_retryram_en               (xdlh_retryram_en              ),    // output
    .xdlh_retryram_par_chk_val      (xdlh_retryram_par_chk_val     ),    // output
    .retryram_xdlh_parerr_in        (retryram_xdlh_parerr_in       ),    // input 
    .retryram_xdlh_data             (retryram_xdlh_data            ),    // input  [134:0]
    .xdlh_retrysotram_waddr         (xdlh_retrysotram_waddr        ),    // output [6:0]
    .xdlh_retrysotram_raddr         (xdlh_retrysotram_raddr        ),    // output [6:0]
    .xdlh_retrysotram_data          (xdlh_retrysotram_data         ),    // output [7:0]
    .xdlh_retrysotram_we            (xdlh_retrysotram_we           ),    // output
    .xdlh_retrysotram_en            (xdlh_retrysotram_en           ),    // output
    .xdlh_retrysotram_par_chk_val   (xdlh_retrysotram_par_chk_val  ),    // output
    .retrysotram_xdlh_data          (retrysotram_xdlh_data         ),    // input  [7:0]
    .retrysotram_xdlh_parerr_in     (retrysotram_xdlh_parerr_in    ),    // input 
    .p_hdrq_dataout                 (p_hdrq_dataout                ),    // input  [133:0]
    .p_hdrq_parerr_in               (p_hdrq_parerr_in              ),    // input 
    .p_hdrq_par_chk_val             (p_hdrq_par_chk_val            ),    // output
    .p_hdrq_addra                   (p_hdrq_addra                  ),    // output [6:0]
    .p_hdrq_addrb                   (p_hdrq_addrb                  ),    // output [6:0]
    .p_hdrq_datain                  (p_hdrq_datain                 ),    // output [133:0]
    .p_hdrq_ena                     (p_hdrq_ena                    ),    // output
    .p_hdrq_enb                     (p_hdrq_enb                    ),    // output
    .p_hdrq_wea                     (p_hdrq_wea                    ),    // output
    .p_dataq_dataout                (p_dataq_dataout               ),    // input  [128:0]
    .p_dataq_parerr_in              (p_dataq_parerr_in             ),    // input 
    .p_dataq_par_chk_val            (p_dataq_par_chk_val           ),    // output
    .p_dataq_addra                  (p_dataq_addra                 ),    // output [6:0]
    .p_dataq_addrb                  (p_dataq_addrb                 ),    // output [6:0]
    .p_dataq_datain                 (p_dataq_datain                ),    // output [128:0]
    .p_dataq_ena                    (p_dataq_ena                   ),    // output
    .p_dataq_enb                    (p_dataq_enb                   ),    // output
    .p_dataq_wea                    (p_dataq_wea                   ),    // output
    .ram2edma_din                   (ram2edma_din                  ),    // input  [255:0]
    .edma2ram_addra                 (edma2ram_addra                ),    // output [1:0]
    .edma2ram_addrb                 (edma2ram_addrb                ),    // output [1:0]
    .edma2ram_dout                  (edma2ram_dout                 ),    // output [255:0]
    .edma2ram_re                    (edma2ram_re                   ),    // output
    .edma2ram_we                    (edma2ram_we                   ),    // output
    .ram2edmarbuff_din              (ram2edmarbuff_din             ),    // input  [127:0]
    .edmarbuff2ram_addra            (edmarbuff2ram_addra           ),    // output [8:0]
    .edmarbuff2ram_addrb            (edmarbuff2ram_addrb           ),    // output [8:0]
    .edmarbuff2ram_dout             (edmarbuff2ram_dout            ),    // output [127:0]
    .edmarbuff2ram_re               (edmarbuff2ram_re              ),    // output
    .edmarbuff2ram_we               (edmarbuff2ram_we              ),    // output
    .aux_clk_active                 (aux_clk_active                ),    // input 
    .app_clk_pm_en                  (app_clk_pm_en                 ),    // input 
    .clkreq_in_n                    (clkreq_in_n                   ),    // input 
    .pm_linkst_in_l1sub             (pm_linkst_in_l1sub            ),    // output
    .cfg_l1sub_en                   (cfg_l1sub_en                  ),    // output
    .mac_phy_pclkreq_n              (mac_phy_pclkreq_n             ),    // output [1:0]
    .cfg_ido_req_en                 (cfg_ido_req_en                ),    // output [1:0]
    .cfg_ido_cpl_en                 (cfg_ido_cpl_en                ),    // output [1:0]
    .cfg_send_cor_err               (cfg_send_cor_err              ),    // output [1:0]
    .cfg_send_nf_err                (cfg_send_nf_err               ),    // output [1:0]
    .cfg_send_f_err                 (cfg_send_f_err                ),    // output [1:0]
    .cfg_int_disable                (cfg_int_disable               )     // output [1:0]
);

// Instance: u_DW_axi_x2x (DW_axi_x2x)
DW_axi_x2x u_DW_axi_x2x (
    .aclk_m                         (aclk_m                        ),    // input 
    .aresetn_m                      (aresetn_m                     ),    // input 
    .awvalid_m                      (awvalid_m                     ),    // input 
    .awaddr_m                       (awaddr_m                      ),    // input  [31:0]
    .awid_m                         (awid_m                        ),    // input  [3:0]
    .awlen_m                        (awlen_m                       ),    // input  [3:0]
    .awsize_m                       (awsize_m                      ),    // input  [2:0]
    .awburst_m                      (awburst_m                     ),    // input  [1:0]
    .awlock_m                       (awlock_m                      ),    // input  [1:0]
    .awcache_m                      (awcache_m                     ),    // input  [3:0]
    .awprot_m                       (awprot_m                      ),    // input  [2:0]
    .awready_m                      (awready_m                     ),    // output
    .wvalid_m                       (wvalid_m                      ),    // input 
    .wid_m                          (wid_m                         ),    // input  [3:0]
    .wdata_m                        (wdata_m                       ),    // input  [63:0]
    .wstrb_m                        (wstrb_m                       ),    // input  [7:0]
    .wlast_m                        (wlast_m                       ),    // input 
    .wready_m                       (wready_m                      ),    // output
    .bvalid_m                       (bvalid_m                      ),    // output
    .bid_m                          (bid_m                         ),    // output [3:0]
    .bresp_m                        (bresp_m                       ),    // output [1:0]
    .bready_m                       (bready_m                      ),    // input 
    .arvalid_m                      (arvalid_m                     ),    // input 
    .arid_m                         (arid_m                        ),    // input  [3:0]
    .araddr_m                       (araddr_m                      ),    // input  [31:0]
    .arlen_m                        (arlen_m                       ),    // input  [3:0]
    .arsize_m                       (arsize_m                      ),    // input  [2:0]
    .arburst_m                      (arburst_m                     ),    // input  [1:0]
    .arlock_m                       (arlock_m                      ),    // input  [1:0]
    .arcache_m                      (arcache_m                     ),    // input  [3:0]
    .arprot_m                       (arprot_m                      ),    // input  [2:0]
    .arready_m                      (arready_m                     ),    // output
    .rvalid_m                       (rvalid_m                      ),    // output
    .rid_m                          (rid_m                         ),    // output [3:0]
    .rdata_m                        (rdata_m                       ),    // output [63:0]
    .rlast_m                        (rlast_m                       ),    // output
    .rresp_m                        (rresp_m                       ),    // output [1:0]
    .rready_m                       (rready_m                      ),    // input 
    .aclk_s                         (aclk_s                        ),    // input 
    .aresetn_s                      (aresetn_s                     ),    // input 
    .awvalid_s1                     (awvalid_s1                    ),    // output
    .awaddr_s1                      (awaddr_s1                     ),    // output [31:0]
    .awid_s1                        (awid_s1                       ),    // output [3:0]
    .awlen_s1                       (awlen_s1                      ),    // output [3:0]
    .awsize_s1                      (awsize_s1                     ),    // output [2:0]
    .awburst_s1                     (awburst_s1                    ),    // output [1:0]
    .awlock_s1                      (awlock_s1                     ),    // output [1:0]
    .awcache_s1                     (awcache_s1                    ),    // output [3:0]
    .awprot_s1                      (awprot_s1                     ),    // output [2:0]
    .awready_s1                     (awready_s1                    ),    // input 
    .wvalid_s1                      (wvalid_s1                     ),    // output
    .wid_s1                         (wid_s1                        ),    // output [3:0]
    .wdata_s1                       (wdata_s1                      ),    // output [63:0]
    .wstrb_s1                       (wstrb_s1                      ),    // output [7:0]
    .wlast_s1                       (wlast_s1                      ),    // output
    .wready_s1                      (wready_s1                     ),    // input 
    .bvalid_s1                      (bvalid_s1                     ),    // input 
    .bid_s1                         (bid_s1                        ),    // input  [3:0]
    .bresp_s1                       (bresp_s1                      ),    // input  [1:0]
    .bready_s1                      (bready_s1                     ),    // output
    .arvalid_s                      (arvalid_s                     ),    // output
    .arid_s                         (arid_s                        ),    // output [3:0]
    .araddr_s                       (araddr_s                      ),    // output [31:0]
    .arlen_s                        (arlen_s                       ),    // output [3:0]
    .arsize_s                       (arsize_s                      ),    // output [2:0]
    .arburst_s                      (arburst_s                     ),    // output [1:0]
    .arlock_s                       (arlock_s                      ),    // output [1:0]
    .arcache_s                      (arcache_s                     ),    // output [3:0]
    .arprot_s                       (arprot_s                      ),    // output [2:0]
    .arready_s                      (arready_s                     ),    // input 
    .rvalid_s                       (rvalid_s                      ),    // input 
    .rid_s                          (rid_s                         ),    // input  [3:0]
    .rdata_s                        (rdata_s                       ),    // input  [63:0]
    .rlast_s                        (rlast_s                       ),    // input 
    .rresp_s                        (rresp_s                       ),    // input  [1:0]
    .rready_s                       (rready_s                      )     // output
);

endmodule